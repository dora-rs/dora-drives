communication:
  iceoryx:
    app_name_prefix: dora-iceoryx-example
    
nodes:
  - id: oasis_agent
    custom:
      inputs:
        control: pid_control_op/control
        tick: dora/timer/secs/1
        carla_gps_ready: carla_gps_op/ready
        yolov5_ready: yolov5/ready
        obstacle_location_ready: obstacle_location_op/ready
        fot_ready: fot_op/ready
        pid_control_ready: pid_control_op/ready
      outputs:
        - position
        - image
        - objective_waypoints
        - lidar_pc
        - check
        - opendrive
      source: shell
      args: >
        python3 $DORA_DEP_HOME/dependencies/Carsmos/simulate_py37/simulate.py 
        --openscenario $DORA_DEP_HOME/dependencies/Carsmos/simulate_py37/srunner/examples/LaneChangeSimple.xosc 
        --agent ../../carla/oasis_agent.py
        
  - id: carla_gps_op
    operator:
      python: ../../carla/carla_gps_op.py
      outputs:
        - gps_waypoints
        - ready
      inputs:
        opendrive: oasis_agent/opendrive
        objective_waypoints: oasis_agent/objective_waypoints
        position: oasis_agent/position
        check: oasis_agent/check

  - id: yolov5
    operator: 
      outputs:
        - bbox
        - ready
      inputs:
        image: oasis_agent/image
        check: oasis_agent/check
      python: ../../operators/yolov5_op.py
    env:
      # CUDA_VISIBLE_DEVICES: ""
      # PYTORCH_DEVICE: cuda
      YOLOV5_PATH: $DORA_DEP_HOME/dependencies/yolov5
      YOLOV5_WEIGHT_PATH: $DORA_DEP_HOME/dependencies/yolov5/yolov5n.pt

  - id: yolop
    operator: 
      outputs:
        - lanes
        - drivable_area
      inputs:
        image: oasis_agent/image
      python: ../../operators/yolop_op.py
    # env:
       # CUDA_VISIBLE_DEVICES: ""

  - id: obstacle_location_op
    operator: 
      outputs:
        - obstacles
        - global_lanes
        - ready
      inputs:
        lidar_pc: oasis_agent/lidar_pc
        obstacles_bbox: yolov5/bbox
        position: oasis_agent/position
        check: oasis_agent/check
        lanes: yolop/lanes
      python: ../../operators/obstacle_location_op.py

  - id: fot_op
    operator:
      python: ../../operators/fot_op.py
      outputs:
        - waypoints
        - ready
      inputs:
        position: oasis_agent/position
        obstacles: obstacle_location_op/obstacles
        gps_waypoints: carla_gps_op/gps_waypoints
        global_lanes: obstacle_location_op/global_lanes
        check: oasis_agent/check
 
  - id: pid_control_op
    operator:
      python: ../../operators/pid_control_op.py
      outputs:
        - control
        - ready
      inputs:
        position: oasis_agent/position
        waypoints: fot_op/waypoints
        check: oasis_agent/check

  - id: plot
    operator:
      python: ../../operators/plot.py
      inputs:
        image: oasis_agent/image
        obstacles_bbox: yolov5/bbox
        obstacles: obstacle_location_op/obstacles
        # traffic_sign_bbox: traffic_sign/bbox
        lanes: yolop/lanes
        global_lanes: obstacle_location_op/global_lanes
        drivable_area: yolop/drivable_area
        # obstacles_id: strong_sort/obstacles_id
        gps_waypoints: carla_gps_op/gps_waypoints
        position: oasis_agent/position
        waypoints: fot_op/waypoints
        control: pid_control_op/control
      #  lidar_pc: oasis_agent/lidar_pc
